// Generated by Dagger (https://dagger.dev).
package com.square.home;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EmployeeListActivity_MembersInjector implements MembersInjector<EmployeeListActivity> {
  private final Provider<EmployeeListPresenter> presenterProvider;

  public EmployeeListActivity_MembersInjector(Provider<EmployeeListPresenter> presenterProvider) {
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<EmployeeListActivity> create(
      Provider<EmployeeListPresenter> presenterProvider) {
    return new EmployeeListActivity_MembersInjector(presenterProvider);}

  @Override
  public void injectMembers(EmployeeListActivity instance) {
    injectPresenter(instance, presenterProvider.get());
  }

  @InjectedFieldSignature("com.square.home.EmployeeListActivity.presenter")
  public static void injectPresenter(EmployeeListActivity instance, Object presenter) {
    instance.presenter = (EmployeeListPresenter) presenter;
  }
}
