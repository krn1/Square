// Generated by Dagger (https://dagger.dev).
package com.square.home;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.reactivex.disposables.CompositeDisposable;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EmployeeListModule_ProvidesDisposableFactory implements Factory<CompositeDisposable> {
  private final EmployeeListModule module;

  public EmployeeListModule_ProvidesDisposableFactory(EmployeeListModule module) {
    this.module = module;
  }

  @Override
  public CompositeDisposable get() {
    return providesDisposable(module);
  }

  public static EmployeeListModule_ProvidesDisposableFactory create(EmployeeListModule module) {
    return new EmployeeListModule_ProvidesDisposableFactory(module);
  }

  public static CompositeDisposable providesDisposable(EmployeeListModule instance) {
    return Preconditions.checkNotNull(instance.providesDisposable(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
